Future work will include convolutional neural networks to train a model to understand diagrams made in PowerPoint or another tool and saved as an image, such as IMEAV [19]. We also plan to include a recommendation system to suggests repayment strategies under certain conditions. Different meta- models for storing ATD should be reviewed. Finally, we will also look into including automatic text extraction methods for audio/video recordings to reduce human interaction.nanThe authors would also like to detect different categories of AS (architectural smells) that could impact different quality attributes, such as performance and security; in this direction, we could identify and compute different ADI index profiles according to the AS's impact on specific quality attributes.In future work, we plan to study the process of issue removal to determine which issues are the most costly to remove and generally extend this analysis to a wider range of project domains and sizes.nannannannannanAs future work, we plan to fully automate the process and empirically evaluate it via large-scale experimentsNonanIn future experiments, we aim to similarly consider other tools, e.g., the commercial tool CAST, tools that provide dependency analysis and other tools developed in academia, e.g., Hotspot Detector, TamDera. Moreover, we are interested in inspecting other dimensions of archi- tectural debt, as the history of projects, and in analyzing large-scale industrial systems.nanSome open issues that require further investigation are: • It remains unclear when is best to conduct a refactoring. The unknown effects of combining the refactoring with uncertainty and urgency suggest further investigation. • We have studied principally the delays that the ATD have on long term development. What needs to be more investigated are the short-term benefits that are gained by the accumulated ATD.nannannannannanOnce the prediction technique is fully evaluated, it will be incorporated into a tool to evaluate the capabilities of the approach in a study with subjects in the context of real software projects. Finally, it is expected to include other types of architectural smells [15] in the work.nanNoNoIn the future we plan to continue our research on what other ATD items can be found and what other impact measures can be combined together for having the complete picture of ATD and its interest, which would greatly help the decision making of the main stakeholders. We also plan to investigate the reasoning behind the architectural violations, whatever they are intentional or not, and whatever or which the architectural violations benefit the final product. Finally, stakeholders that were part of the early evaluation of the tool said that it would be valuable to see the evolution of the debt. They wanted to see if the tendency is that the debt increases or decreases over time, as well as see what impact planned or potential future changes would have.We plan to investigate the role of code and architectural smells in TD, since they are associated to known solutions, that can speed up their resolution process. We would like also to work on the definition of a new TDI, with a focus on code and architectural debt, and experiment it on a large dataset of projects. In the TDI computation we would like to consider: 1) Code and Architectural smells detection; 2) Code and architecture/design metrics; 3) History of a system, including code changes and lifespan of smells; 4) Identification of problems more critical than others, to weight the collected analysis elements (e.g., metrics, smells, issues) according to their relevance in existing (past) projects.Our study generates a number of avenues for future work. First, it provides a benchmark for future studies that seek to examine the relationship between measures of architecture and the costs associated with maintenance and adaptation. Second, it provides methods for evaluating the technical debt associated with software architecture, which could be verified via future empirical studies across a larger number of contexts and systems. Finally, while we focus only on the costs associated with corrective maintenance, a significant amount of the value from refactoring is likely to come from an increase in developer productivity when responding to new requirements. It is our hope that the methods we describe can provide a springboard for undertaking such enquiries.As future work, we plan to extend our tooling to mine archi- tectural smells directly from Git repositories, thus allowing us to link the current information to code churn and investigate the effects of smells on change rates.Another future investigation is toward a cross validation of the rank- ing of the architectural smells with the data on the bugs reported in the affected components considering also the historic information of the maintenance activities on the smelly components.nanNoThe qualitative data derived from the survey are not based on measured or observed data but on estimations made by the respondents. In future studies, we plan to include physical measurements and observations, to create a stronger reliability of the data. The result of this research may be affected by some threats to validity.NoIn summary, managing TD requires a few investments that are not well known by the practitioners and are difficult to be motivated by a precise cost/benefits ratio. Consequently, without an investment on processes and tools to track TD, it remains difficult to make TD visible. And it is difficult to advocate for refactoring invisible TD. This represents a vicious cycle: companies suffer the negative effects of TD and try to contain it, but at the same time they do not find enough motivations to invest in a more systematic management process. By looking at the motivations for start tracking TD, the results show that organizations do so when they experience the interest of TD: slow feature development, quality issues and performance degradation. However, at such point the interest of the TD is already high and, as explained in our recent papers [6], [10], it is hard to refactor, as the cost has also increased and become too expensive. In conclusion, the only way out the vicious cycle seems to be, for the practitioners, to proactively start tracking TD. However, we do not have evidence yet that such improvement would bring the 25% effort down. This is a long-term study that should be set for future research to conductnannannannanWhile the plug-in is useful as-is, it was developed as a first step in an ongoing project aimed at applying case-based reasoning to the issue of software product quality. The next step in this project aims to use the described plug-in as part of a research effort to define and validate the aggregation of these metrics as part of a software quality model.nanNonanIt is necessary to study other aspects of ATD such as measurement, monitoring, priorization, repayment and communication and documentation. The results can be taken into consideration by practitioners when dealing with scalability debt and may be used as starting point to develop the method presented here furher or t resear novel lightweight approaches to manage technical debt related to other key business qualitiesnannanThe author want to do a survey in real world about risk architecture in software industry.nan