There is calculation formula about cost of ATDnannanIt was not shared the data collectionnannannannannanThe practical idea of the study about ATDI approach hotspot identification in Android application is good.Weak. Actually, this is a technical paper with only two pages, and there is no scientific rigor.nanThere is no link to dataset of evaluationnanThere is no repliaction kit to reproduce the studynannannannannanThe authro used a tool that analysis only java source code. There is no method to calculate the ATD cost.nanWeak. The paper is more technical and describe a tool called DV8 and its importance to check the software architecture. However, it is not a scientific study.The study shoud be provide a repliaction kitThere is no repliaction kit to reproduce the studyThere is no data collected to compare the used tools. There is no Design research and there is no an experiment to evaluate the tools using a set of data.The dataset was not available to reproduce the study.The architectural debt index using architectural smells and tracking the index's evolution throughout a systemâ€™s history was not precise; for example, the authors should be created a formula to represent the architectural debt index. They were even using a demonstration of evaluation of each architectural smell individually, but a general formula was not created.The is no asses of effort waste to fix Architectural SmellnanThere is no data to proof the approuch. For example: maybe the authors shoud be use a real system to validate the proposal.Not applicableThere are no details about how to identify the TD, and there are no explicit future works.The is no ATDI issues explicited on the studynannannannanThe dataset used in study was not available to reproduce the resultsnanThe study did not share the dataset to evaluate. Besides, even calculating the TD cost, there is ATD specif costnanThe approuch to identify, estimate and calculate the scabality architectural issue is manual.nannanBut the author did not work about architectural technical debt, only about behavior of software architect about risknan